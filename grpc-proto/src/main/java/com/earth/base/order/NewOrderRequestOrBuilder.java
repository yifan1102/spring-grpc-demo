// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/earth/base/order/order.proto

// Protobuf Java Version: 3.25.3
package com.earth.base.order;

public interface NewOrderRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.earth.base.order.NewOrderRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 交易账户ID，必须字段
   * </pre>
   *
   * <code>int64 account_id = 1;</code>
   * @return The accountId.
   */
  long getAccountId();

  /**
   * <pre>
   * 客户端订单ID，可选字段
   * </pre>
   *
   * <code>string client_order_id = 2;</code>
   * @return The clientOrderId.
   */
  java.lang.String getClientOrderId();
  /**
   * <pre>
   * 客户端订单ID，可选字段
   * </pre>
   *
   * <code>string client_order_id = 2;</code>
   * @return The bytes for clientOrderId.
   */
  com.google.protobuf.ByteString
      getClientOrderIdBytes();

  /**
   * <pre>
   * 币对，必须字段
   * </pre>
   *
   * <code>string symbol_id = 3;</code>
   * @return The symbolId.
   */
  java.lang.String getSymbolId();
  /**
   * <pre>
   * 币对，必须字段
   * </pre>
   *
   * <code>string symbol_id = 3;</code>
   * @return The bytes for symbolId.
   */
  com.google.protobuf.ByteString
      getSymbolIdBytes();

  /**
   * <pre>
   * 订单类型，必须字段
   * </pre>
   *
   * <code>.com.earth.base.common.OrderTypeEnum order_type = 4;</code>
   * @return The enum numeric value on the wire for orderType.
   */
  int getOrderTypeValue();
  /**
   * <pre>
   * 订单类型，必须字段
   * </pre>
   *
   * <code>.com.earth.base.common.OrderTypeEnum order_type = 4;</code>
   * @return The orderType.
   */
  com.earth.base.common.OrderTypeEnum getOrderType();

  /**
   * <pre>
   * how long will the order remain active
   * </pre>
   *
   * <code>.com.earth.base.common.OrderTimeInForceEnum time_in_force = 5;</code>
   * @return The enum numeric value on the wire for timeInForce.
   */
  int getTimeInForceValue();
  /**
   * <pre>
   * how long will the order remain active
   * </pre>
   *
   * <code>.com.earth.base.common.OrderTimeInForceEnum time_in_force = 5;</code>
   * @return The timeInForce.
   */
  com.earth.base.common.OrderTimeInForceEnum getTimeInForce();

  /**
   * <pre>
   * 订单方向
   * </pre>
   *
   * <code>.com.earth.base.common.OrderSideEnum side = 6;</code>
   * @return The enum numeric value on the wire for side.
   */
  int getSideValue();
  /**
   * <pre>
   * 订单方向
   * </pre>
   *
   * <code>.com.earth.base.common.OrderSideEnum side = 6;</code>
   * @return The side.
   */
  com.earth.base.common.OrderSideEnum getSide();

  /**
   * <pre>
   * 买入数量(根据订单方向填充字段),22位整数10位小数, Java中转换为BigDecimal(以下略)
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal price = 7;</code>
   * @return Whether the price field is set.
   */
  boolean hasPrice();
  /**
   * <pre>
   * 买入数量(根据订单方向填充字段),22位整数10位小数, Java中转换为BigDecimal(以下略)
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal price = 7;</code>
   * @return The price.
   */
  com.earth.base.common.Decimal getPrice();
  /**
   * <pre>
   * 买入数量(根据订单方向填充字段),22位整数10位小数, Java中转换为BigDecimal(以下略)
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal price = 7;</code>
   */
  com.earth.base.common.DecimalOrBuilder getPriceOrBuilder();

  /**
   * <pre>
   * 卖出手数(根据订单方向填充字段)
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal quantity = 8;</code>
   * @return Whether the quantity field is set.
   */
  boolean hasQuantity();
  /**
   * <pre>
   * 卖出手数(根据订单方向填充字段)
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal quantity = 8;</code>
   * @return The quantity.
   */
  com.earth.base.common.Decimal getQuantity();
  /**
   * <pre>
   * 卖出手数(根据订单方向填充字段)
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal quantity = 8;</code>
   */
  com.earth.base.common.DecimalOrBuilder getQuantityOrBuilder();

  /**
   * <pre>
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal amount = 9;</code>
   * @return Whether the amount field is set.
   */
  boolean hasAmount();
  /**
   * <pre>
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal amount = 9;</code>
   * @return The amount.
   */
  com.earth.base.common.Decimal getAmount();
  /**
   * <pre>
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal amount = 9;</code>
   */
  com.earth.base.common.DecimalOrBuilder getAmountOrBuilder();

  /**
   * <code>int64 exchange_id = 10;</code>
   * @return The exchangeId.
   */
  long getExchangeId();

  /**
   * <pre>
   * maker 适用费率， 后期该费率， 由前端设置好后， 再传过来
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal maker_fee_rate = 11;</code>
   * @return Whether the makerFeeRate field is set.
   */
  boolean hasMakerFeeRate();
  /**
   * <pre>
   * maker 适用费率， 后期该费率， 由前端设置好后， 再传过来
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal maker_fee_rate = 11;</code>
   * @return The makerFeeRate.
   */
  com.earth.base.common.Decimal getMakerFeeRate();
  /**
   * <pre>
   * maker 适用费率， 后期该费率， 由前端设置好后， 再传过来
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal maker_fee_rate = 11;</code>
   */
  com.earth.base.common.DecimalOrBuilder getMakerFeeRateOrBuilder();

  /**
   * <pre>
   * taker 适用费率 , 后期该费率， 由前端设置好后， 再传过来
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal taker_fee_rate = 12;</code>
   * @return Whether the takerFeeRate field is set.
   */
  boolean hasTakerFeeRate();
  /**
   * <pre>
   * taker 适用费率 , 后期该费率， 由前端设置好后， 再传过来
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal taker_fee_rate = 12;</code>
   * @return The takerFeeRate.
   */
  com.earth.base.common.Decimal getTakerFeeRate();
  /**
   * <pre>
   * taker 适用费率 , 后期该费率， 由前端设置好后， 再传过来
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal taker_fee_rate = 12;</code>
   */
  com.earth.base.common.DecimalOrBuilder getTakerFeeRateOrBuilder();

  /**
   * <pre>
   * 杠杆（目前至针对期货使用）
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal leverage = 13;</code>
   * @return Whether the leverage field is set.
   */
  boolean hasLeverage();
  /**
   * <pre>
   * 杠杆（目前至针对期货使用）
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal leverage = 13;</code>
   * @return The leverage.
   */
  com.earth.base.common.Decimal getLeverage();
  /**
   * <pre>
   * 杠杆（目前至针对期货使用）
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal leverage = 13;</code>
   */
  com.earth.base.common.DecimalOrBuilder getLeverageOrBuilder();

  /**
   * <pre>
   * 是否是平仓单
   * </pre>
   *
   * <code>bool is_close = 14;</code>
   * @return The isClose.
   */
  boolean getIsClose();

  /**
   * <pre>
   * 是否是系统强平单
   * </pre>
   *
   * <code>bool is_liquidation_order = 15;</code>
   * @return The isLiquidationOrder.
   */
  boolean getIsLiquidationOrder();

  /**
   * <code>int64 org_id = 16;</code>
   * @return The orgId.
   */
  long getOrgId();

  /**
   * <pre>
   * 请求时间(UTC)到秒, 如2018-10-10 00:00:00
   * </pre>
   *
   * <code>int64 sign_time = 17;</code>
   * @return The signTime.
   */
  long getSignTime();

  /**
   * <pre>
   * 不重复的字符串,类uuid
   * </pre>
   *
   * <code>string sign_nonce = 18;</code>
   * @return The signNonce.
   */
  java.lang.String getSignNonce();
  /**
   * <pre>
   * 不重复的字符串,类uuid
   * </pre>
   *
   * <code>string sign_nonce = 18;</code>
   * @return The bytes for signNonce.
   */
  com.google.protobuf.ByteString
      getSignNonceBytes();

  /**
   * <code>string sign_broker = 19;</code>
   * @return The signBroker.
   */
  java.lang.String getSignBroker();
  /**
   * <code>string sign_broker = 19;</code>
   * @return The bytes for signBroker.
   */
  com.google.protobuf.ByteString
      getSignBrokerBytes();

  /**
   * <pre>
   *stop-limit order: trigger_price
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal trigger_price = 20;</code>
   * @return Whether the triggerPrice field is set.
   */
  boolean hasTriggerPrice();
  /**
   * <pre>
   *stop-limit order: trigger_price
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal trigger_price = 20;</code>
   * @return The triggerPrice.
   */
  com.earth.base.common.Decimal getTriggerPrice();
  /**
   * <pre>
   *stop-limit order: trigger_price
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal trigger_price = 20;</code>
   */
  com.earth.base.common.DecimalOrBuilder getTriggerPriceOrBuilder();

  /**
   * <pre>
   *订单的原始价格，当SecurityType = 合约，且是反向合约时，要传入原始价格
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal original_price = 21;</code>
   * @return Whether the originalPrice field is set.
   */
  boolean hasOriginalPrice();
  /**
   * <pre>
   *订单的原始价格，当SecurityType = 合约，且是反向合约时，要传入原始价格
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal original_price = 21;</code>
   * @return The originalPrice.
   */
  com.earth.base.common.Decimal getOriginalPrice();
  /**
   * <pre>
   *订单的原始价格，当SecurityType = 合约，且是反向合约时，要传入原始价格
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal original_price = 21;</code>
   */
  com.earth.base.common.DecimalOrBuilder getOriginalPriceOrBuilder();

  /**
   * <pre>
   *下单请求时传入的额外的flag， 默认为0。为了考虑下单时可能需要的一些额外的
   *要求，可以通过设置该置表达。
   * </pre>
   *
   * <code>.com.earth.base.order.NewOrderRequest.ExtraFlagEnum extra_flag = 22;</code>
   * @return The enum numeric value on the wire for extraFlag.
   */
  int getExtraFlagValue();
  /**
   * <pre>
   *下单请求时传入的额外的flag， 默认为0。为了考虑下单时可能需要的一些额外的
   *要求，可以通过设置该置表达。
   * </pre>
   *
   * <code>.com.earth.base.order.NewOrderRequest.ExtraFlagEnum extra_flag = 22;</code>
   * @return The extraFlag.
   */
  com.earth.base.order.NewOrderRequest.ExtraFlagEnum getExtraFlag();

  /**
   * <code>.com.earth.base.common.Decimal maker_bonus_rate = 23;</code>
   * @return Whether the makerBonusRate field is set.
   */
  boolean hasMakerBonusRate();
  /**
   * <code>.com.earth.base.common.Decimal maker_bonus_rate = 23;</code>
   * @return The makerBonusRate.
   */
  com.earth.base.common.Decimal getMakerBonusRate();
  /**
   * <code>.com.earth.base.common.Decimal maker_bonus_rate = 23;</code>
   */
  com.earth.base.common.DecimalOrBuilder getMakerBonusRateOrBuilder();

  /**
   * <code>int64 order_source = 24;</code>
   * @return The orderSource.
   */
  long getOrderSource();

  /**
   * <code>.com.earth.base.common.BaseRequest base_request = 100;</code>
   * @return Whether the baseRequest field is set.
   */
  boolean hasBaseRequest();
  /**
   * <code>.com.earth.base.common.BaseRequest base_request = 100;</code>
   * @return The baseRequest.
   */
  com.earth.base.common.BaseRequest getBaseRequest();
  /**
   * <code>.com.earth.base.common.BaseRequest base_request = 100;</code>
   */
  com.earth.base.common.BaseRequestOrBuilder getBaseRequestOrBuilder();

  /**
   * <pre>
   * 抵扣方式。""-不抵扣;score-积分抵扣；experienceAmount-体验金抵扣
   * </pre>
   *
   * <code>string deduction = 26;</code>
   * @return The deduction.
   */
  java.lang.String getDeduction();
  /**
   * <pre>
   * 抵扣方式。""-不抵扣;score-积分抵扣；experienceAmount-体验金抵扣
   * </pre>
   *
   * <code>string deduction = 26;</code>
   * @return The bytes for deduction.
   */
  com.google.protobuf.ByteString
      getDeductionBytes();

  /**
   * <pre>
   * 预扣冻结抵用手续费的积分数量
   * </pre>
   *
   * <code>int64 integral_num_expect_frozen = 27;</code>
   * @return The integralNumExpectFrozen.
   */
  long getIntegralNumExpectFrozen();

  /**
   * <pre>
   * 积分对USDT比例快照
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal integral_num_to_usdt_rate = 28;</code>
   * @return Whether the integralNumToUsdtRate field is set.
   */
  boolean hasIntegralNumToUsdtRate();
  /**
   * <pre>
   * 积分对USDT比例快照
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal integral_num_to_usdt_rate = 28;</code>
   * @return The integralNumToUsdtRate.
   */
  com.earth.base.common.Decimal getIntegralNumToUsdtRate();
  /**
   * <pre>
   * 积分对USDT比例快照
   * </pre>
   *
   * <code>.com.earth.base.common.Decimal integral_num_to_usdt_rate = 28;</code>
   */
  com.earth.base.common.DecimalOrBuilder getIntegralNumToUsdtRateOrBuilder();

  /**
   * <pre>
   * 已使用积分数量
   * </pre>
   *
   * <code>int64 integral_num_used = 29;</code>
   * @return The integralNumUsed.
   */
  long getIntegralNumUsed();

  /**
   * <pre>
   * 撤销解冻积分数量
   * </pre>
   *
   * <code>int64 integral_num_unfrozen = 30;</code>
   * @return The integralNumUnfrozen.
   */
  long getIntegralNumUnfrozen();

  /**
   * <pre>
   * 剩余可用积分数量
   * </pre>
   *
   * <code>int64 integral_num_remain = 31;</code>
   * @return The integralNumRemain.
   */
  long getIntegralNumRemain();

  /**
   * <code>bool isCross = 25;</code>
   * @return The isCross.
   */
  boolean getIsCross();
}
